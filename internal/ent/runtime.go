// Code generated by ent, DO NOT EDIT.

package ent

import (
	"github.com/bwl21/zupfmanager/internal/ent/project"
	"github.com/bwl21/zupfmanager/internal/ent/projectsong"
	"github.com/bwl21/zupfmanager/internal/ent/schema"
	"github.com/bwl21/zupfmanager/internal/ent/song"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	projectFields := schema.Project{}.Fields()
	_ = projectFields
	// projectDescTitle is the schema descriptor for title field.
	projectDescTitle := projectFields[1].Descriptor()
	// project.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	project.TitleValidator = projectDescTitle.Validators[0].(func(string) error)
	// projectDescID is the schema descriptor for id field.
	projectDescID := projectFields[0].Descriptor()
	// project.IDValidator is a validator for the "id" field. It is called by the builders before save.
	project.IDValidator = projectDescID.Validators[0].(func(int) error)
	projectsongFields := schema.ProjectSong{}.Fields()
	_ = projectsongFields
	// projectsongDescPriority is the schema descriptor for priority field.
	projectsongDescPriority := projectsongFields[1].Descriptor()
	// projectsong.PriorityValidator is a validator for the "priority" field. It is called by the builders before save.
	projectsong.PriorityValidator = projectsongDescPriority.Validators[0].(func(int) error)
	// projectsongDescID is the schema descriptor for id field.
	projectsongDescID := projectsongFields[0].Descriptor()
	// projectsong.IDValidator is a validator for the "id" field. It is called by the builders before save.
	projectsong.IDValidator = projectsongDescID.Validators[0].(func(int) error)
	songFields := schema.Song{}.Fields()
	_ = songFields
	// songDescTitle is the schema descriptor for title field.
	songDescTitle := songFields[1].Descriptor()
	// song.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	song.TitleValidator = songDescTitle.Validators[0].(func(string) error)
	// songDescFilename is the schema descriptor for filename field.
	songDescFilename := songFields[2].Descriptor()
	// song.FilenameValidator is a validator for the "filename" field. It is called by the builders before save.
	song.FilenameValidator = songDescFilename.Validators[0].(func(string) error)
	// songDescID is the schema descriptor for id field.
	songDescID := songFields[0].Descriptor()
	// song.IDValidator is a validator for the "id" field. It is called by the builders before save.
	song.IDValidator = songDescID.Validators[0].(func(int) error)
}
